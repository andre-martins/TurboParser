# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
TurboMorphologicalTaggerprg_PROGRAMS =  \
	TurboMorphologicalTagger$(EXEEXT)
subdir = src/morphological_tagger
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(TurboMorphologicalTaggerprgdir)"
PROGRAMS = $(TurboMorphologicalTaggerprg_PROGRAMS)
am_TurboMorphologicalTagger_OBJECTS =  \
	MorphologicalDictionary.$(OBJEXT) \
	MorphologicalFeatures.$(OBJEXT) \
	MorphologicalInstance.$(OBJEXT) \
	MorphologicalInstanceNumeric.$(OBJEXT) \
	MorphologicalOptions.$(OBJEXT) MorphologicalPipe.$(OBJEXT) \
	MorphologicalReader.$(OBJEXT) MorphologicalWriter.$(OBJEXT) \
	TurboMorphologicalTagger.$(OBJEXT) SequencePipe.$(OBJEXT) \
	SequenceReader.$(OBJEXT) SequenceWriter.$(OBJEXT) \
	SequencePart.$(OBJEXT) SequenceDecoder.$(OBJEXT) \
	SequenceOptions.$(OBJEXT) TokenDictionary.$(OBJEXT) \
	SequenceInstance.$(OBJEXT) SequenceInstanceNumeric.$(OBJEXT) \
	SequenceDictionary.$(OBJEXT) Alphabet.$(OBJEXT) \
	Dictionary.$(OBJEXT) Reader.$(OBJEXT) Parameters.$(OBJEXT) \
	Pipe.$(OBJEXT) Writer.$(OBJEXT) Options.$(OBJEXT) \
	AlgUtils.$(OBJEXT) SerializationUtils.$(OBJEXT) \
	StringUtils.$(OBJEXT) TimeUtils.$(OBJEXT)
TurboMorphologicalTagger_OBJECTS =  \
	$(am_TurboMorphologicalTagger_OBJECTS)
TurboMorphologicalTagger_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
TurboMorphologicalTagger_DEPENDENCIES = $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(TurboMorphologicalTagger_SOURCES)
DIST_SOURCES = $(TurboMorphologicalTagger_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LFLAGS = @LFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
UTIL = ../util
CLASSIFIER = ../classifier
SEQUENCE = ../sequence
ENTITY_RECOGNIZER = ../entity_recognizer
PARSER = ../parser
TurboMorphologicalTaggerprgdir = ../..
TurboMorphologicalTagger_SOURCES = MorphologicalDictionary.cpp \
MorphologicalDictionary.h \
MorphologicalFeatures.cpp \
MorphologicalFeatures.h \
MorphologicalFeatureTemplates.h \
MorphologicalInstance.cpp \
MorphologicalInstance.h \
MorphologicalInstanceNumeric.cpp \
MorphologicalInstanceNumeric.h \
MorphologicalOptions.cpp \
MorphologicalOptions.h \
MorphologicalPipe.cpp \
MorphologicalPipe.h \
MorphologicalReader.cpp \
MorphologicalReader.h \
MorphologicalWriter.cpp \
MorphologicalWriter.h \
TurboMorphologicalTagger.cpp \
$(SEQUENCE)/SequenceFeatures.h \
$(SEQUENCE)/SequencePipe.cpp  $(SEQUENCE)/SequencePipe.h \
$(SEQUENCE)/SequenceReader.cpp $(SEQUENCE)/SequenceReader.h \
$(SEQUENCE)/SequenceWriter.cpp $(SEQUENCE)/SequenceWriter.h \
$(SEQUENCE)/SequencePart.cpp $(SEQUENCE)/SequencePart.h \
$(SEQUENCE)/SequenceDecoder.cpp $(SEQUENCE)/SequenceDecoder.h \
$(SEQUENCE)/SequenceOptions.cpp  $(SEQUENCE)/SequenceOptions.h \
$(SEQUENCE)/TokenDictionary.cpp $(SEQUENCE)/TokenDictionary.h \
$(SEQUENCE)/SequenceInstance.cpp  $(SEQUENCE)/SequenceInstance.h \
$(SEQUENCE)/SequenceInstanceNumeric.cpp $(SEQUENCE)/SequenceInstanceNumeric.h \
$(SEQUENCE)/SequenceDictionary.cpp $(SEQUENCE)/SequenceDictionary.h \
$(CLASSIFIER)/Alphabet.cpp $(CLASSIFIER)/Dictionary.cpp \
$(CLASSIFIER)/Features.h $(CLASSIFIER)/Options.h $(CLASSIFIER)/Part.h \
$(CLASSIFIER)/Reader.cpp $(CLASSIFIER)/SparseParameterVector.h \
$(CLASSIFIER)/Alphabet.h $(CLASSIFIER)/Dictionary.h $(CLASSIFIER)/Instance.h \
$(CLASSIFIER)/Parameters.cpp $(CLASSIFIER)/Pipe.cpp $(CLASSIFIER)/Reader.h \
$(CLASSIFIER)/Writer.cpp $(CLASSIFIER)/Decoder.h \
$(CLASSIFIER)/FeatureEncoder.h $(CLASSIFIER)/Options.cpp \
$(CLASSIFIER)/Parameters.h $(CLASSIFIER)/Pipe.h \
$(CLASSIFIER)/SparseLabeledParameterVector.h $(CLASSIFIER)/Writer.h \
$(UTIL)/AlgUtils.cpp $(UTIL)/logval.h $(UTIL)/SerializationUtils.h \
$(UTIL)/StringUtils.h $(UTIL)/TimeUtils.h $(UTIL)/AlgUtils.h \
$(UTIL)/SerializationUtils.cpp $(UTIL)/StringUtils.cpp $(UTIL)/TimeUtils.cpp \
$(UTIL)/Utils.h

AM_CPPFLAGS = -I$(UTIL) -I$(CLASSIFIER) -I$(SEQUENCE) -I$(ENTITY_RECOGNIZER) -I$(PARSER) $(CPPFLAGS)
LDADD = $(LFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/morphological_tagger/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/morphological_tagger/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-TurboMorphologicalTaggerprgPROGRAMS: $(TurboMorphologicalTaggerprg_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(TurboMorphologicalTaggerprg_PROGRAMS)'; test -n "$(TurboMorphologicalTaggerprgdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(TurboMorphologicalTaggerprgdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(TurboMorphologicalTaggerprgdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(TurboMorphologicalTaggerprgdir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(TurboMorphologicalTaggerprgdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-TurboMorphologicalTaggerprgPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(TurboMorphologicalTaggerprg_PROGRAMS)'; test -n "$(TurboMorphologicalTaggerprgdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(TurboMorphologicalTaggerprgdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(TurboMorphologicalTaggerprgdir)" && rm -f $$files

clean-TurboMorphologicalTaggerprgPROGRAMS:
	-test -z "$(TurboMorphologicalTaggerprg_PROGRAMS)" || rm -f $(TurboMorphologicalTaggerprg_PROGRAMS)

TurboMorphologicalTagger$(EXEEXT): $(TurboMorphologicalTagger_OBJECTS) $(TurboMorphologicalTagger_DEPENDENCIES) $(EXTRA_TurboMorphologicalTagger_DEPENDENCIES) 
	@rm -f TurboMorphologicalTagger$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TurboMorphologicalTagger_OBJECTS) $(TurboMorphologicalTagger_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AlgUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Alphabet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Dictionary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MorphologicalDictionary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MorphologicalFeatures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MorphologicalInstance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MorphologicalInstanceNumeric.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MorphologicalOptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MorphologicalPipe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MorphologicalReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MorphologicalWriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Parameters.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Pipe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Reader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceDecoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceDictionary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceInstance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceInstanceNumeric.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceOptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequencePart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequencePipe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceWriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SerializationUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StringUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TimeUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TokenDictionary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TurboMorphologicalTagger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Writer.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

SequencePipe.o: $(SEQUENCE)/SequencePipe.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequencePipe.o -MD -MP -MF $(DEPDIR)/SequencePipe.Tpo -c -o SequencePipe.o `test -f '$(SEQUENCE)/SequencePipe.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequencePipe.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequencePipe.Tpo $(DEPDIR)/SequencePipe.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequencePipe.cpp' object='SequencePipe.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequencePipe.o `test -f '$(SEQUENCE)/SequencePipe.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequencePipe.cpp

SequencePipe.obj: $(SEQUENCE)/SequencePipe.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequencePipe.obj -MD -MP -MF $(DEPDIR)/SequencePipe.Tpo -c -o SequencePipe.obj `if test -f '$(SEQUENCE)/SequencePipe.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequencePipe.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequencePipe.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequencePipe.Tpo $(DEPDIR)/SequencePipe.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequencePipe.cpp' object='SequencePipe.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequencePipe.obj `if test -f '$(SEQUENCE)/SequencePipe.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequencePipe.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequencePipe.cpp'; fi`

SequenceReader.o: $(SEQUENCE)/SequenceReader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceReader.o -MD -MP -MF $(DEPDIR)/SequenceReader.Tpo -c -o SequenceReader.o `test -f '$(SEQUENCE)/SequenceReader.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceReader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceReader.Tpo $(DEPDIR)/SequenceReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceReader.cpp' object='SequenceReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceReader.o `test -f '$(SEQUENCE)/SequenceReader.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceReader.cpp

SequenceReader.obj: $(SEQUENCE)/SequenceReader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceReader.obj -MD -MP -MF $(DEPDIR)/SequenceReader.Tpo -c -o SequenceReader.obj `if test -f '$(SEQUENCE)/SequenceReader.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceReader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceReader.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceReader.Tpo $(DEPDIR)/SequenceReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceReader.cpp' object='SequenceReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceReader.obj `if test -f '$(SEQUENCE)/SequenceReader.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceReader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceReader.cpp'; fi`

SequenceWriter.o: $(SEQUENCE)/SequenceWriter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceWriter.o -MD -MP -MF $(DEPDIR)/SequenceWriter.Tpo -c -o SequenceWriter.o `test -f '$(SEQUENCE)/SequenceWriter.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceWriter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceWriter.Tpo $(DEPDIR)/SequenceWriter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceWriter.cpp' object='SequenceWriter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceWriter.o `test -f '$(SEQUENCE)/SequenceWriter.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceWriter.cpp

SequenceWriter.obj: $(SEQUENCE)/SequenceWriter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceWriter.obj -MD -MP -MF $(DEPDIR)/SequenceWriter.Tpo -c -o SequenceWriter.obj `if test -f '$(SEQUENCE)/SequenceWriter.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceWriter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceWriter.Tpo $(DEPDIR)/SequenceWriter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceWriter.cpp' object='SequenceWriter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceWriter.obj `if test -f '$(SEQUENCE)/SequenceWriter.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceWriter.cpp'; fi`

SequencePart.o: $(SEQUENCE)/SequencePart.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequencePart.o -MD -MP -MF $(DEPDIR)/SequencePart.Tpo -c -o SequencePart.o `test -f '$(SEQUENCE)/SequencePart.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequencePart.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequencePart.Tpo $(DEPDIR)/SequencePart.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequencePart.cpp' object='SequencePart.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequencePart.o `test -f '$(SEQUENCE)/SequencePart.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequencePart.cpp

SequencePart.obj: $(SEQUENCE)/SequencePart.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequencePart.obj -MD -MP -MF $(DEPDIR)/SequencePart.Tpo -c -o SequencePart.obj `if test -f '$(SEQUENCE)/SequencePart.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequencePart.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequencePart.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequencePart.Tpo $(DEPDIR)/SequencePart.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequencePart.cpp' object='SequencePart.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequencePart.obj `if test -f '$(SEQUENCE)/SequencePart.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequencePart.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequencePart.cpp'; fi`

SequenceDecoder.o: $(SEQUENCE)/SequenceDecoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceDecoder.o -MD -MP -MF $(DEPDIR)/SequenceDecoder.Tpo -c -o SequenceDecoder.o `test -f '$(SEQUENCE)/SequenceDecoder.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceDecoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceDecoder.Tpo $(DEPDIR)/SequenceDecoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceDecoder.cpp' object='SequenceDecoder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceDecoder.o `test -f '$(SEQUENCE)/SequenceDecoder.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceDecoder.cpp

SequenceDecoder.obj: $(SEQUENCE)/SequenceDecoder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceDecoder.obj -MD -MP -MF $(DEPDIR)/SequenceDecoder.Tpo -c -o SequenceDecoder.obj `if test -f '$(SEQUENCE)/SequenceDecoder.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceDecoder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceDecoder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceDecoder.Tpo $(DEPDIR)/SequenceDecoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceDecoder.cpp' object='SequenceDecoder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceDecoder.obj `if test -f '$(SEQUENCE)/SequenceDecoder.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceDecoder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceDecoder.cpp'; fi`

SequenceOptions.o: $(SEQUENCE)/SequenceOptions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceOptions.o -MD -MP -MF $(DEPDIR)/SequenceOptions.Tpo -c -o SequenceOptions.o `test -f '$(SEQUENCE)/SequenceOptions.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceOptions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceOptions.Tpo $(DEPDIR)/SequenceOptions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceOptions.cpp' object='SequenceOptions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceOptions.o `test -f '$(SEQUENCE)/SequenceOptions.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceOptions.cpp

SequenceOptions.obj: $(SEQUENCE)/SequenceOptions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceOptions.obj -MD -MP -MF $(DEPDIR)/SequenceOptions.Tpo -c -o SequenceOptions.obj `if test -f '$(SEQUENCE)/SequenceOptions.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceOptions.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceOptions.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceOptions.Tpo $(DEPDIR)/SequenceOptions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceOptions.cpp' object='SequenceOptions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceOptions.obj `if test -f '$(SEQUENCE)/SequenceOptions.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceOptions.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceOptions.cpp'; fi`

TokenDictionary.o: $(SEQUENCE)/TokenDictionary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TokenDictionary.o -MD -MP -MF $(DEPDIR)/TokenDictionary.Tpo -c -o TokenDictionary.o `test -f '$(SEQUENCE)/TokenDictionary.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/TokenDictionary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/TokenDictionary.Tpo $(DEPDIR)/TokenDictionary.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/TokenDictionary.cpp' object='TokenDictionary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TokenDictionary.o `test -f '$(SEQUENCE)/TokenDictionary.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/TokenDictionary.cpp

TokenDictionary.obj: $(SEQUENCE)/TokenDictionary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TokenDictionary.obj -MD -MP -MF $(DEPDIR)/TokenDictionary.Tpo -c -o TokenDictionary.obj `if test -f '$(SEQUENCE)/TokenDictionary.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/TokenDictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/TokenDictionary.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/TokenDictionary.Tpo $(DEPDIR)/TokenDictionary.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/TokenDictionary.cpp' object='TokenDictionary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TokenDictionary.obj `if test -f '$(SEQUENCE)/TokenDictionary.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/TokenDictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/TokenDictionary.cpp'; fi`

SequenceInstance.o: $(SEQUENCE)/SequenceInstance.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceInstance.o -MD -MP -MF $(DEPDIR)/SequenceInstance.Tpo -c -o SequenceInstance.o `test -f '$(SEQUENCE)/SequenceInstance.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceInstance.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceInstance.Tpo $(DEPDIR)/SequenceInstance.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceInstance.cpp' object='SequenceInstance.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceInstance.o `test -f '$(SEQUENCE)/SequenceInstance.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceInstance.cpp

SequenceInstance.obj: $(SEQUENCE)/SequenceInstance.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceInstance.obj -MD -MP -MF $(DEPDIR)/SequenceInstance.Tpo -c -o SequenceInstance.obj `if test -f '$(SEQUENCE)/SequenceInstance.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceInstance.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceInstance.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceInstance.Tpo $(DEPDIR)/SequenceInstance.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceInstance.cpp' object='SequenceInstance.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceInstance.obj `if test -f '$(SEQUENCE)/SequenceInstance.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceInstance.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceInstance.cpp'; fi`

SequenceInstanceNumeric.o: $(SEQUENCE)/SequenceInstanceNumeric.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceInstanceNumeric.o -MD -MP -MF $(DEPDIR)/SequenceInstanceNumeric.Tpo -c -o SequenceInstanceNumeric.o `test -f '$(SEQUENCE)/SequenceInstanceNumeric.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceInstanceNumeric.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceInstanceNumeric.Tpo $(DEPDIR)/SequenceInstanceNumeric.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceInstanceNumeric.cpp' object='SequenceInstanceNumeric.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceInstanceNumeric.o `test -f '$(SEQUENCE)/SequenceInstanceNumeric.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceInstanceNumeric.cpp

SequenceInstanceNumeric.obj: $(SEQUENCE)/SequenceInstanceNumeric.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceInstanceNumeric.obj -MD -MP -MF $(DEPDIR)/SequenceInstanceNumeric.Tpo -c -o SequenceInstanceNumeric.obj `if test -f '$(SEQUENCE)/SequenceInstanceNumeric.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceInstanceNumeric.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceInstanceNumeric.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceInstanceNumeric.Tpo $(DEPDIR)/SequenceInstanceNumeric.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceInstanceNumeric.cpp' object='SequenceInstanceNumeric.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceInstanceNumeric.obj `if test -f '$(SEQUENCE)/SequenceInstanceNumeric.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceInstanceNumeric.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceInstanceNumeric.cpp'; fi`

SequenceDictionary.o: $(SEQUENCE)/SequenceDictionary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceDictionary.o -MD -MP -MF $(DEPDIR)/SequenceDictionary.Tpo -c -o SequenceDictionary.o `test -f '$(SEQUENCE)/SequenceDictionary.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceDictionary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceDictionary.Tpo $(DEPDIR)/SequenceDictionary.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceDictionary.cpp' object='SequenceDictionary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceDictionary.o `test -f '$(SEQUENCE)/SequenceDictionary.cpp' || echo '$(srcdir)/'`$(SEQUENCE)/SequenceDictionary.cpp

SequenceDictionary.obj: $(SEQUENCE)/SequenceDictionary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceDictionary.obj -MD -MP -MF $(DEPDIR)/SequenceDictionary.Tpo -c -o SequenceDictionary.obj `if test -f '$(SEQUENCE)/SequenceDictionary.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceDictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceDictionary.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SequenceDictionary.Tpo $(DEPDIR)/SequenceDictionary.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(SEQUENCE)/SequenceDictionary.cpp' object='SequenceDictionary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceDictionary.obj `if test -f '$(SEQUENCE)/SequenceDictionary.cpp'; then $(CYGPATH_W) '$(SEQUENCE)/SequenceDictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SEQUENCE)/SequenceDictionary.cpp'; fi`

Alphabet.o: $(CLASSIFIER)/Alphabet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Alphabet.o -MD -MP -MF $(DEPDIR)/Alphabet.Tpo -c -o Alphabet.o `test -f '$(CLASSIFIER)/Alphabet.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Alphabet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Alphabet.Tpo $(DEPDIR)/Alphabet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Alphabet.cpp' object='Alphabet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Alphabet.o `test -f '$(CLASSIFIER)/Alphabet.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Alphabet.cpp

Alphabet.obj: $(CLASSIFIER)/Alphabet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Alphabet.obj -MD -MP -MF $(DEPDIR)/Alphabet.Tpo -c -o Alphabet.obj `if test -f '$(CLASSIFIER)/Alphabet.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Alphabet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Alphabet.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Alphabet.Tpo $(DEPDIR)/Alphabet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Alphabet.cpp' object='Alphabet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Alphabet.obj `if test -f '$(CLASSIFIER)/Alphabet.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Alphabet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Alphabet.cpp'; fi`

Dictionary.o: $(CLASSIFIER)/Dictionary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Dictionary.o -MD -MP -MF $(DEPDIR)/Dictionary.Tpo -c -o Dictionary.o `test -f '$(CLASSIFIER)/Dictionary.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Dictionary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Dictionary.Tpo $(DEPDIR)/Dictionary.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Dictionary.cpp' object='Dictionary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Dictionary.o `test -f '$(CLASSIFIER)/Dictionary.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Dictionary.cpp

Dictionary.obj: $(CLASSIFIER)/Dictionary.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Dictionary.obj -MD -MP -MF $(DEPDIR)/Dictionary.Tpo -c -o Dictionary.obj `if test -f '$(CLASSIFIER)/Dictionary.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Dictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Dictionary.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Dictionary.Tpo $(DEPDIR)/Dictionary.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Dictionary.cpp' object='Dictionary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Dictionary.obj `if test -f '$(CLASSIFIER)/Dictionary.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Dictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Dictionary.cpp'; fi`

Reader.o: $(CLASSIFIER)/Reader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Reader.o -MD -MP -MF $(DEPDIR)/Reader.Tpo -c -o Reader.o `test -f '$(CLASSIFIER)/Reader.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Reader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Reader.Tpo $(DEPDIR)/Reader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Reader.cpp' object='Reader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Reader.o `test -f '$(CLASSIFIER)/Reader.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Reader.cpp

Reader.obj: $(CLASSIFIER)/Reader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Reader.obj -MD -MP -MF $(DEPDIR)/Reader.Tpo -c -o Reader.obj `if test -f '$(CLASSIFIER)/Reader.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Reader.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Reader.Tpo $(DEPDIR)/Reader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Reader.cpp' object='Reader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Reader.obj `if test -f '$(CLASSIFIER)/Reader.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Reader.cpp'; fi`

Parameters.o: $(CLASSIFIER)/Parameters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Parameters.o -MD -MP -MF $(DEPDIR)/Parameters.Tpo -c -o Parameters.o `test -f '$(CLASSIFIER)/Parameters.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Parameters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Parameters.Tpo $(DEPDIR)/Parameters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Parameters.cpp' object='Parameters.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Parameters.o `test -f '$(CLASSIFIER)/Parameters.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Parameters.cpp

Parameters.obj: $(CLASSIFIER)/Parameters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Parameters.obj -MD -MP -MF $(DEPDIR)/Parameters.Tpo -c -o Parameters.obj `if test -f '$(CLASSIFIER)/Parameters.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Parameters.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Parameters.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Parameters.Tpo $(DEPDIR)/Parameters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Parameters.cpp' object='Parameters.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Parameters.obj `if test -f '$(CLASSIFIER)/Parameters.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Parameters.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Parameters.cpp'; fi`

Pipe.o: $(CLASSIFIER)/Pipe.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Pipe.o -MD -MP -MF $(DEPDIR)/Pipe.Tpo -c -o Pipe.o `test -f '$(CLASSIFIER)/Pipe.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Pipe.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Pipe.Tpo $(DEPDIR)/Pipe.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Pipe.cpp' object='Pipe.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Pipe.o `test -f '$(CLASSIFIER)/Pipe.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Pipe.cpp

Pipe.obj: $(CLASSIFIER)/Pipe.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Pipe.obj -MD -MP -MF $(DEPDIR)/Pipe.Tpo -c -o Pipe.obj `if test -f '$(CLASSIFIER)/Pipe.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Pipe.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Pipe.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Pipe.Tpo $(DEPDIR)/Pipe.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Pipe.cpp' object='Pipe.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Pipe.obj `if test -f '$(CLASSIFIER)/Pipe.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Pipe.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Pipe.cpp'; fi`

Writer.o: $(CLASSIFIER)/Writer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Writer.o -MD -MP -MF $(DEPDIR)/Writer.Tpo -c -o Writer.o `test -f '$(CLASSIFIER)/Writer.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Writer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Writer.Tpo $(DEPDIR)/Writer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Writer.cpp' object='Writer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Writer.o `test -f '$(CLASSIFIER)/Writer.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Writer.cpp

Writer.obj: $(CLASSIFIER)/Writer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Writer.obj -MD -MP -MF $(DEPDIR)/Writer.Tpo -c -o Writer.obj `if test -f '$(CLASSIFIER)/Writer.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Writer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Writer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Writer.Tpo $(DEPDIR)/Writer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Writer.cpp' object='Writer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Writer.obj `if test -f '$(CLASSIFIER)/Writer.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Writer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Writer.cpp'; fi`

Options.o: $(CLASSIFIER)/Options.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Options.o -MD -MP -MF $(DEPDIR)/Options.Tpo -c -o Options.o `test -f '$(CLASSIFIER)/Options.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Options.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Options.Tpo $(DEPDIR)/Options.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Options.cpp' object='Options.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Options.o `test -f '$(CLASSIFIER)/Options.cpp' || echo '$(srcdir)/'`$(CLASSIFIER)/Options.cpp

Options.obj: $(CLASSIFIER)/Options.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Options.obj -MD -MP -MF $(DEPDIR)/Options.Tpo -c -o Options.obj `if test -f '$(CLASSIFIER)/Options.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Options.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Options.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/Options.Tpo $(DEPDIR)/Options.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(CLASSIFIER)/Options.cpp' object='Options.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Options.obj `if test -f '$(CLASSIFIER)/Options.cpp'; then $(CYGPATH_W) '$(CLASSIFIER)/Options.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CLASSIFIER)/Options.cpp'; fi`

AlgUtils.o: $(UTIL)/AlgUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AlgUtils.o -MD -MP -MF $(DEPDIR)/AlgUtils.Tpo -c -o AlgUtils.o `test -f '$(UTIL)/AlgUtils.cpp' || echo '$(srcdir)/'`$(UTIL)/AlgUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/AlgUtils.Tpo $(DEPDIR)/AlgUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(UTIL)/AlgUtils.cpp' object='AlgUtils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AlgUtils.o `test -f '$(UTIL)/AlgUtils.cpp' || echo '$(srcdir)/'`$(UTIL)/AlgUtils.cpp

AlgUtils.obj: $(UTIL)/AlgUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AlgUtils.obj -MD -MP -MF $(DEPDIR)/AlgUtils.Tpo -c -o AlgUtils.obj `if test -f '$(UTIL)/AlgUtils.cpp'; then $(CYGPATH_W) '$(UTIL)/AlgUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTIL)/AlgUtils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/AlgUtils.Tpo $(DEPDIR)/AlgUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(UTIL)/AlgUtils.cpp' object='AlgUtils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AlgUtils.obj `if test -f '$(UTIL)/AlgUtils.cpp'; then $(CYGPATH_W) '$(UTIL)/AlgUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTIL)/AlgUtils.cpp'; fi`

SerializationUtils.o: $(UTIL)/SerializationUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SerializationUtils.o -MD -MP -MF $(DEPDIR)/SerializationUtils.Tpo -c -o SerializationUtils.o `test -f '$(UTIL)/SerializationUtils.cpp' || echo '$(srcdir)/'`$(UTIL)/SerializationUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SerializationUtils.Tpo $(DEPDIR)/SerializationUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(UTIL)/SerializationUtils.cpp' object='SerializationUtils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SerializationUtils.o `test -f '$(UTIL)/SerializationUtils.cpp' || echo '$(srcdir)/'`$(UTIL)/SerializationUtils.cpp

SerializationUtils.obj: $(UTIL)/SerializationUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SerializationUtils.obj -MD -MP -MF $(DEPDIR)/SerializationUtils.Tpo -c -o SerializationUtils.obj `if test -f '$(UTIL)/SerializationUtils.cpp'; then $(CYGPATH_W) '$(UTIL)/SerializationUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTIL)/SerializationUtils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SerializationUtils.Tpo $(DEPDIR)/SerializationUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(UTIL)/SerializationUtils.cpp' object='SerializationUtils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SerializationUtils.obj `if test -f '$(UTIL)/SerializationUtils.cpp'; then $(CYGPATH_W) '$(UTIL)/SerializationUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTIL)/SerializationUtils.cpp'; fi`

StringUtils.o: $(UTIL)/StringUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StringUtils.o -MD -MP -MF $(DEPDIR)/StringUtils.Tpo -c -o StringUtils.o `test -f '$(UTIL)/StringUtils.cpp' || echo '$(srcdir)/'`$(UTIL)/StringUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/StringUtils.Tpo $(DEPDIR)/StringUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(UTIL)/StringUtils.cpp' object='StringUtils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StringUtils.o `test -f '$(UTIL)/StringUtils.cpp' || echo '$(srcdir)/'`$(UTIL)/StringUtils.cpp

StringUtils.obj: $(UTIL)/StringUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StringUtils.obj -MD -MP -MF $(DEPDIR)/StringUtils.Tpo -c -o StringUtils.obj `if test -f '$(UTIL)/StringUtils.cpp'; then $(CYGPATH_W) '$(UTIL)/StringUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTIL)/StringUtils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/StringUtils.Tpo $(DEPDIR)/StringUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(UTIL)/StringUtils.cpp' object='StringUtils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StringUtils.obj `if test -f '$(UTIL)/StringUtils.cpp'; then $(CYGPATH_W) '$(UTIL)/StringUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTIL)/StringUtils.cpp'; fi`

TimeUtils.o: $(UTIL)/TimeUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TimeUtils.o -MD -MP -MF $(DEPDIR)/TimeUtils.Tpo -c -o TimeUtils.o `test -f '$(UTIL)/TimeUtils.cpp' || echo '$(srcdir)/'`$(UTIL)/TimeUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/TimeUtils.Tpo $(DEPDIR)/TimeUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(UTIL)/TimeUtils.cpp' object='TimeUtils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TimeUtils.o `test -f '$(UTIL)/TimeUtils.cpp' || echo '$(srcdir)/'`$(UTIL)/TimeUtils.cpp

TimeUtils.obj: $(UTIL)/TimeUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TimeUtils.obj -MD -MP -MF $(DEPDIR)/TimeUtils.Tpo -c -o TimeUtils.obj `if test -f '$(UTIL)/TimeUtils.cpp'; then $(CYGPATH_W) '$(UTIL)/TimeUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTIL)/TimeUtils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/TimeUtils.Tpo $(DEPDIR)/TimeUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(UTIL)/TimeUtils.cpp' object='TimeUtils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TimeUtils.obj `if test -f '$(UTIL)/TimeUtils.cpp'; then $(CYGPATH_W) '$(UTIL)/TimeUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(UTIL)/TimeUtils.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(TurboMorphologicalTaggerprgdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-TurboMorphologicalTaggerprgPROGRAMS clean-generic \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-TurboMorphologicalTaggerprgPROGRAMS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-TurboMorphologicalTaggerprgPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-TurboMorphologicalTaggerprgPROGRAMS clean-generic \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install \
	install-TurboMorphologicalTaggerprgPROGRAMS install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-TurboMorphologicalTaggerprgPROGRAMS uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
